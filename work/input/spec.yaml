swagger: '2.0'
info:
  title: Qander API
  description: Qander API
  version: "1.0.0"
host: apigee.qander.nl
schemes:
  - https
basePath: /v1
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  apiKey:
    type: apiKey
    in: header
    name: Authorization
paths:
  /merchants/{merchantId}/calculators/services:
    get:
      description: |
        Get a list of all calculator services for the merchant.
      security:
        - apiKey: []
      parameters:
        - $ref: '#/parameters/merchantId'
      responses:
        200:
          description: Successful response.
          schema:
            title: ArrayOfServiceIds
            type: array
            items:
              type: string
        400: 
          description: Error response
          schema:
            $ref: '#/definitions/errorResponse'  
  /merchants/{merchantId}/calculators/services/{serviceId}:
    get:
      description: |
        Get the details of a calculator service.
      security:
        - apiKey: []
      parameters:
        - $ref: '#/parameters/merchantId'
        - $ref: '#/parameters/serviceId'
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/serviceConfiguration'
        400: 
          description: Error response
          schema:
            $ref: '#/definitions/errorResponse'          
  /merchants/{merchantId}/calculators/services/{serviceId}/calculations:
    post:
      description: |
        Performs calculations for a service.
        Only returns results for valid calculations.
        For example, it is possible that the amount is so high that the lower number of terms values would result in a monthly payment which is too high.
      security:
        - apiKey: []
      parameters:
        - $ref: '#/parameters/merchantId'
        - $ref: '#/parameters/serviceId'
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/serviceCalculationsInput'
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/serviceCalculationsOutput'      
        400: 
          description: Error response
          schema:
            $ref: '#/definitions/errorResponse'                      
  /merchants/{merchantId}/calculators/capacity/calculations:
    post:
      description: |
        Perform calculations to check how much can be borrowed.
      security:
        - apiKey: []
      parameters:
        - $ref: '#/parameters/merchantId'
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/capacityCalculationsInput'
      responses:
        200:
          description: Successful response              
          schema:
            $ref: '#/definitions/capacityCalculationsOutput'
        400: 
          description: Error response
          schema:
            $ref: '#/definitions/errorResponse'
definitions:             
  serviceConfiguration:
    title: ServiceConfiguration
    type: object
    properties:
      minAmount: 
        type: object
        description: Minimum loan amount.
        allOf:
          - $ref: '#/definitions/moneyAmount'
      maxAmount: 
        type: object
        description: Maximum loan amount.
        allOf:
          - $ref: '#/definitions/moneyAmount'
      initializationAmount: 
        type: object
        description: The advised initialization amount for sliders etc.
        allOf:
          - $ref: '#/definitions/moneyAmount'        
      amountGranularity: 
        type: object
        description: The advised granularity for the loan amount to use for sliders etc. This value is not enforced.
        allOf:
          - $ref: '#/definitions/moneyAmount'
      possibleNrOfTerms:
        type: array
        description: The number of terms values which can be used for this service. Note that not all number of terms values can be used in combination with all values.
        items:
          type: integer        
  serviceCalculationsInput:        
    title: ServiceCalculationsInput
    type: object
    properties:
      amount:
        type: object
        description: The loan amount.
        allOf:
          - $ref: '#/definitions/moneyAmount'
      nrOfTermsToCalculate:
        type: array
        description: The number of terms to perform calculations for. If this value is left empty a calculation will be performed for all possible terms for this service.
        items:
          type: integer
  serviceCalculationsOutput:        
    title: ArrayOfServiceCalculationOutput
    type: array
    description: The results of the calculations. The order of the calculation results will correspond to the order of the nrOfTermsToCalculate input, so if the first nrOfTerms of the input was 24 the first calculation result will be for 24 terms. If no nrOfTermsToCalculate input was provided the calculation results will be ordered by nrOfTerms descending.
    items:
      $ref: '#/definitions/serviceCalculationOutputOrError'                   
  serviceCalculationOutputOrError:
    title: ServiceCalculationOutputOrError
    description: Contains the result of the calculation or an error, never both.
    type: object
    properties:
      nrOfTerms:
        type: integer
      calculationError:
        type: object
        description: The reason why the calculation failed.
        allOf:
          - $ref: '#/definitions/error'
      calculationResult:
        type: object
        description: The result of the calculation.
        allOf:
          - $ref: '#/definitions/serviceCalculationOutput'
  serviceCalculationOutput:
    title: ServiceCalculationOutput
    type: object
    properties:
      serviceId:
        type: string
      loanAmount:
        type: object
        description: Loan amount that the calculation was based on.
        allOf:
          - $ref: '#/definitions/moneyAmount'        
      nrOfTerms:
        type: integer
        description: The number of terms used as input for the calculation. This value can be used to correlate the result with the input. totalTerms is the actual calculated number of terms and might differ slightly from nrOfTerms. 
      monthlyPaymentAmount:
        type: object
        description: Amount to be paid per month.
        allOf:
          - $ref: '#/definitions/moneyAmount'  
      annualPercentRate:
        type: object
        description: APR (interest per year).
        allOf:
          - $ref: '#/definitions/percentage'  
      monthlyPercentRate:
        type: object
        description: MPR (interest per month).
        allOf:
          - $ref: '#/definitions/percentage'  
      totalAmount:
        type: object
        description: todo
        allOf:
          - $ref: '#/definitions/moneyAmount'  
      totalCreditFee:
        type: object
        description: Total amount of interest and administration cost to be paid by the customer.
        allOf:
          - $ref: '#/definitions/moneyAmount'  
      totalLoanCost:
        type: object
        description: Total amount to be paid by the customer made up of principal (loan) amount, administration cost and interest.
        allOf:
          - $ref: '#/definitions/moneyAmount'  
      yearlyCostPercentage:  
        type: object
        description: Total cost expressed as a yearly percentage of the total credit amount. This indicator allows customers to compare offers.
        allOf:
          - $ref: '#/definitions/percentage'  
      totalTerms:
        type: integer    
        description: Number of installments (in months) to repay the loan.
  capacityCalculationInput:
    title: CapacityCalculationInput
    description: Input for a single capacity calculation.
    type: object
    properties:
      livingTogether: 
        type: boolean
        description: Living alone or together with other.
      nrOfChildren: 
        description: Number of children under 18 living at home.
        type: integer
      netIncome: 
        type: object
        description: Net base income per month without travel expenses and other additions. Cannot be used in combination with grossIncome.
        allOf:
          - $ref: '#/definitions/moneyAmount'
      netIncome13thMonth: 
        type: boolean
        description: Net bonus (13th month).
      grossIncome: 
        type: object
        description: Gross income per month as per salary slip. Cannot be used in combination with netIncome.
        allOf:
          - $ref: '#/definitions/moneyAmount'
      rentMortgage: 
        type: object
        description: Amount paid in rent or mortgage per month (gross).
        allOf:
          - $ref: '#/definitions/moneyAmount'
      netIncomePartner: 
        type: object
        description: Net income per month partner without travel expenses and other additions.
        allOf:
          - $ref: '#/definitions/moneyAmount'
      netIncome13thMonthPartner: 
        type: boolean
        description: Net bonus (13th month) of partner.
      grossIncomePartner: 
        type: object
        description: Gross income per month partner as per salary slip.
        allOf:
          - $ref: '#/definitions/moneyAmount'
      otherExpenditures:
        type: object
        description: Other monthly expenses.
        allOf:
          - $ref: '#/definitions/moneyAmount'
      alimonyToReceive:
        type: object
        description: Alimony received per month.
        allOf:
          - $ref: '#/definitions/moneyAmount'
      alimonyToPay:
        type: object
        description: Alimony paid per month.
        allOf:
          - $ref: '#/definitions/moneyAmount'
  capacityCalculationsInput:        
    title: ArrayOfCapacityCalculationInput
    type: array
    items:
      $ref: '#/definitions/capacityCalculationInput'        
  capacityCalculationOutput:
    title: CapacityCalculationResponse
    description: Output for a single capacity calculation.
    type: object
    properties:
      netIncome: 
        type: object
        description: Calculated net income per month.
        allOf:
          - $ref: '#/definitions/moneyAmount'
      principalNorm: 
        type: object
        description: 'basisnorm'
        allOf:
          - $ref: '#/definitions/moneyAmount'
      standardOfLiving: 
        type: object
        description: 'levensstandaard'
        allOf:
          - $ref: '#/definitions/moneyAmount'
      maxAllowedLoanAmount: 
        type: object
        description: Maximum amount that the customer can borrow.
        allOf:
          - $ref: '#/definitions/moneyAmount'
  capacityCalculationsOutput:        
    title: ArrayOfCapacityCalculationOutput
    type: array
    items:
      $ref: '#/definitions/capacityCalculationOutput'        
  moneyAmount:
    title: AmountOfMoney
    type: object
    properties:
      amountInSmallestUnit:
        description: The amount represented in the smallest unit. For example, a amountInSmallestUnit of 1250 and a currencyCode of EUR represent 1250 eurocents or 12 euro. And a amountInSmallestUnit of 1250 and a currencyCode of JPY represent 1250     Japanese yen.
        type: integer
      currencyCode: 
        description: A ISO 4217 currency code consisting of three characters.
        type: string
  percentage:
    title: Percentage
    type: object
    properties:
      value:
        description: The percentage value. This includes the decimals. For example, if the value is 1201 and decimals is 2 then this object represents 12.01%. This number is exposed as a whole number because that is easier for calculations and custom formatting rules. 
        type: integer
      decimals:
        description: The number of decimals in the percentage value.
        type: integer      
  errorResponse:
    title: ErrorResponse
    description: Error response
    type: object
    properties:
      errorResponseId:
          description: An unique error ID which can be used by Qander to locate related error information.
          type: string
      errors:
        title: ArrayOfErrors
        description: A list of errors
        type: array      
        items:
          type: array
          items:
             $ref: '#/definitions/error'
  error:
    title: Error
    type: object
    properties:
      code:
        description: An error code. This code will not change and can be used to base UI logic on.
        type: string
      message:
        description: A description of the error. May contain information which can be useful for troubleshooting. This message is not intended to be displayed to the end user.
        type: string
parameters:
  merchantId:
    name: merchantId
    in: path
    description: Merchant ID
    required: true
    type: string
    default: "bob"
  serviceId:
    name: serviceId
    in: path
    description: Service ID
    required: true
    type: string      